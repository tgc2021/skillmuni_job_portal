{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/forgot-password.service\";\nimport * as i3 from \"@angular/common\";\nfunction ForgotPasswordEmailSentComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 16);\n    i0.ɵɵelement(2, \"path\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" Email resent successfully! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordEmailSentComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.resendError, \" \");\n  }\n}\nexport class ForgotPasswordEmailSentComponent {\n  constructor(router, forgotPasswordService) {\n    this.router = router;\n    this.forgotPasswordService = forgotPasswordService;\n    this.email = '';\n    this.isResending = false;\n    this.resendSuccess = false;\n    this.resendError = '';\n  }\n  ngOnInit() {\n    // Get the email from the service\n    this.forgotPasswordService.email$.subscribe(email => {\n      this.email = email || 'your email';\n    });\n  }\n  navigateToLogin() {\n    this.router.navigate(['/login']);\n  }\n  resendEmail() {\n    if (this.isResending) return;\n    this.isResending = true;\n    this.resendError = '';\n    this.resendSuccess = false;\n    // Simulate API call\n    setTimeout(() => {\n      try {\n        // In a real app, you would call your auth service here to resend the email\n        this.resendSuccess = true;\n      } catch (error) {\n        this.resendError = 'Failed to resend email. Please try again.';\n        console.error('Resend email error:', error);\n      } finally {\n        this.isResending = false;\n      }\n    }, 1000);\n  }\n  static {\n    this.ɵfac = function ForgotPasswordEmailSentComponent_Factory(t) {\n      return new (t || ForgotPasswordEmailSentComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ForgotPasswordService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ForgotPasswordEmailSentComponent,\n      selectors: [[\"app-forgot-password-email-sent\"]],\n      decls: 25,\n      vars: 5,\n      consts: [[1, \"login-container\"], [1, \"login-card\"], [1, \"success-icon\"], [\"width\", \"80\", \"height\", \"80\", \"viewBox\", \"0 0 80 80\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"cx\", \"40\", \"cy\", \"40\", \"r\", \"38\", \"stroke\", \"#4CAF50\", \"stroke-width\", \"4\"], [\"d\", \"M25 42L36 53L65 24\", \"stroke\", \"#4CAF50\", \"stroke-width\", \"6\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\"], [1, \"login-title\"], [1, \"login-subtitle\"], [1, \"highlight\"], [1, \"resend-container\"], [1, \"resend-btn\", 3, \"disabled\", \"click\"], [\"class\", \"success-message\", 4, \"ngIf\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"login-btn\", 3, \"click\"], [1, \"submit-icon\"], [1, \"success-message\"], [\"width\", \"16\", \"height\", \"16\", \"viewBox\", \"0 0 16 16\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M13.3334 4L6.00008 11.3333L2.66675 8\", \"stroke\", \"#4CAF50\", \"stroke-width\", \"2\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\"], [1, \"error-message\"]],\n      template: function ForgotPasswordEmailSentComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(3, \"svg\", 3);\n          i0.ɵɵelement(4, \"circle\", 4)(5, \"path\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(6, \"h2\", 6);\n          i0.ɵɵtext(7, \"Check Your Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"p\", 7);\n          i0.ɵɵtext(9, \" We've sent a password reset link to \");\n          i0.ɵɵelementStart(10, \"span\", 8);\n          i0.ɵɵtext(11);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"p\", 7);\n          i0.ɵɵtext(13, \" Click the link in the email to reset your password. If you don't see it, check your spam folder. \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 9)(15, \"p\");\n          i0.ɵɵtext(16, \"Didn't receive the email? \");\n          i0.ɵɵelementStart(17, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function ForgotPasswordEmailSentComponent_Template_button_click_17_listener() {\n            return ctx.resendEmail();\n          });\n          i0.ɵɵtext(18);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(19, ForgotPasswordEmailSentComponent_div_19_Template, 4, 0, \"div\", 11);\n          i0.ɵɵtemplate(20, ForgotPasswordEmailSentComponent_div_20_Template, 2, 1, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function ForgotPasswordEmailSentComponent_Template_button_click_21_listener() {\n            return ctx.navigateToLogin();\n          });\n          i0.ɵɵtext(22, \" Back to Login \");\n          i0.ɵɵelementStart(23, \"span\", 14);\n          i0.ɵɵtext(24, \"\\u2794\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(11);\n          i0.ɵɵtextInterpolate(ctx.email);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"disabled\", ctx.isResending);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.isResending ? \"Sending...\" : \"Resend\", \" \");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.resendSuccess);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.resendError);\n        }\n      },\n      dependencies: [i3.NgIf],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","resendError","ForgotPasswordEmailSentComponent","constructor","router","forgotPasswordService","email","isResending","resendSuccess","ngOnInit","email$","subscribe","navigateToLogin","navigate","resendEmail","setTimeout","error","console","ɵɵdirectiveInject","i1","Router","i2","ForgotPasswordService","selectors","decls","vars","consts","template","ForgotPasswordEmailSentComponent_Template","rf","ctx","ɵɵnamespaceHTML","ɵɵlistener","ForgotPasswordEmailSentComponent_Template_button_click_17_listener","ɵɵtemplate","ForgotPasswordEmailSentComponent_div_19_Template","ForgotPasswordEmailSentComponent_div_20_Template","ForgotPasswordEmailSentComponent_Template_button_click_21_listener","ɵɵtextInterpolate","ɵɵproperty"],"sources":["/Users/apple/Desktop/skillmuni-job-portal/src/app/auth/forgot-password/forgot-password-email-sent/forgot-password-email-sent.component.ts","/Users/apple/Desktop/skillmuni-job-portal/src/app/auth/forgot-password/forgot-password-email-sent/forgot-password-email-sent.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ForgotPasswordService } from '../../services/forgot-password.service';\n\n@Component({\n  selector: 'app-forgot-password-email-sent',\n  templateUrl: './forgot-password-email-sent.component.html',\n  styleUrls: ['./forgot-password-email-sent.component.css']\n})\nexport class ForgotPasswordEmailSentComponent implements OnInit {\n  email: string = '';\n  isResending: boolean = false;\n  resendSuccess: boolean = false;\n  resendError: string = '';\n\n  constructor(\n    private router: Router,\n    private forgotPasswordService: ForgotPasswordService\n  ) {}\n\n  ngOnInit() {\n    // Get the email from the service\n    this.forgotPasswordService.email$.subscribe(email => {\n      this.email = email || 'your email';\n    });\n  }\n\n  navigateToLogin() {\n    this.router.navigate(['/login']);\n  }\n\n  resendEmail() {\n    if (this.isResending) return;\n    \n    this.isResending = true;\n    this.resendError = '';\n    this.resendSuccess = false;\n\n    // Simulate API call\n    setTimeout(() => {\n      try {\n        // In a real app, you would call your auth service here to resend the email\n        this.resendSuccess = true;\n      } catch (error) {\n        this.resendError = 'Failed to resend email. Please try again.';\n        console.error('Resend email error:', error);\n      } finally {\n        this.isResending = false;\n      }\n    }, 1000);\n  }\n}\n","<div class=\"login-container\">\n  <div class=\"login-card\">\n    <div class=\"success-icon\">\n      <svg width=\"80\" height=\"80\" viewBox=\"0 0 80 80\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"40\" cy=\"40\" r=\"38\" stroke=\"#4CAF50\" stroke-width=\"4\"/>\n        <path d=\"M25 42L36 53L65 24\" stroke=\"#4CAF50\" stroke-width=\"6\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      </svg>\n    </div>\n\n    <h2 class=\"login-title\">Check Your Email</h2>\n    <p class=\"login-subtitle\">\n      We've sent a password reset link to <span class=\"highlight\">{{ email }}</span>\n    </p>\n    <p class=\"login-subtitle\">\n      Click the link in the email to reset your password. If you don't see it, check your spam folder.\n    </p>\n\n    <div class=\"resend-container\">\n      <p>Didn't receive the email? <button class=\"resend-btn\" (click)=\"resendEmail()\" [disabled]=\"isResending\">\n        {{ isResending ? 'Sending...' : 'Resend' }}\n      </button></p>\n      \n      <div *ngIf=\"resendSuccess\" class=\"success-message\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M13.3334 4L6.00008 11.3333L2.66675 8\" stroke=\"#4CAF50\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n        Email resent successfully!\n      </div>\n      \n      <div *ngIf=\"resendError\" class=\"error-message\">\n        {{ resendError }}\n      </div>\n    </div>\n\n    <button class=\"login-btn\" (click)=\"navigateToLogin()\">\n      Back to Login <span class=\"submit-icon\">&#10132;</span>\n    </button>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}