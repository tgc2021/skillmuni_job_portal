{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/forgot-password.service\";\nimport * as i4 from \"@angular/common\";\nfunction ForgotPasswordCreateComponent_form_11_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.getPasswordErrors(), \" \");\n  }\n}\nfunction ForgotPasswordCreateComponent_form_11_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (ctx_r3.confirmPassword == null ? null : ctx_r3.confirmPassword.hasError(\"required\")) ? \"Please confirm your password\" : \"Passwords do not match\", \" \");\n  }\n}\nfunction ForgotPasswordCreateComponent_form_11_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.errorMessage, \" \");\n  }\n}\nfunction ForgotPasswordCreateComponent_form_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 10);\n    i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordCreateComponent_form_11_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 11)(2, \"div\", 12)(3, \"label\");\n    i0.ɵɵtext(4, \"New Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ForgotPasswordCreateComponent_form_11_span_5_Template, 2, 1, \"span\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 14);\n    i0.ɵɵelement(7, \"input\", 15);\n    i0.ɵɵelementStart(8, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ForgotPasswordCreateComponent_form_11_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.togglePasswordVisibility(\"password\"));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(9, \"svg\", 17);\n    i0.ɵɵelement(10, \"path\", 18)(11, \"path\", 19);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(12, \"div\", 11)(13, \"div\", 12)(14, \"label\");\n    i0.ɵɵtext(15, \"Confirm New Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(16, ForgotPasswordCreateComponent_form_11_span_16_Template, 2, 1, \"span\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 14);\n    i0.ɵɵelement(18, \"input\", 20);\n    i0.ɵɵelementStart(19, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ForgotPasswordCreateComponent_form_11_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.togglePasswordVisibility(\"confirmPassword\"));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(20, \"svg\", 17);\n    i0.ɵɵelement(21, \"path\", 18)(22, \"path\", 19);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵtemplate(23, ForgotPasswordCreateComponent_form_11_div_23_Template, 2, 1, \"div\", 21);\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(24, \"button\", 22);\n    i0.ɵɵtext(25, \" Reset Password \");\n    i0.ɵɵelementStart(26, \"span\", 23);\n    i0.ɵɵtext(27, \"\\u2794\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.passwordForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.password == null ? null : ctx_r0.password.touched) && (ctx_r0.password == null ? null : ctx_r0.password.invalid));\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"error\", (ctx_r0.password == null ? null : ctx_r0.password.touched) && (ctx_r0.password == null ? null : ctx_r0.password.invalid));\n    i0.ɵɵproperty(\"type\", ctx_r0.showPassword ? \"text\" : \"password\");\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.confirmPassword == null ? null : ctx_r0.confirmPassword.touched) && ((ctx_r0.confirmPassword == null ? null : ctx_r0.confirmPassword.invalid) || ctx_r0.passwordForm.hasError(\"mismatch\")));\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"error\", (ctx_r0.confirmPassword == null ? null : ctx_r0.confirmPassword.touched) && ((ctx_r0.confirmPassword == null ? null : ctx_r0.confirmPassword.invalid) || ctx_r0.passwordForm.hasError(\"mismatch\")));\n    i0.ɵɵproperty(\"type\", ctx_r0.showConfirmPassword ? \"text\" : \"password\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorMessage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.passwordForm.invalid);\n  }\n}\nfunction ForgotPasswordCreateComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵelement(1, \"div\", 27);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Updating password...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class ForgotPasswordCreateComponent {\n  constructor(fb, router, route, forgotPasswordService) {\n    this.fb = fb;\n    this.router = router;\n    this.route = route;\n    this.forgotPasswordService = forgotPasswordService;\n    this.showPassword = false;\n    this.showConfirmPassword = false;\n    this.isLoading = false;\n    this.errorMessage = '';\n    this.email = '';\n    this.token = '';\n    this.passwordForm = this.fb.group({\n      password: ['', [Validators.required, Validators.minLength(8), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$')]],\n      confirmPassword: ['', Validators.required]\n    }, {\n      validator: this.passwordMatchValidator\n    });\n  }\n  ngOnInit() {\n    // Get email and token from the service or route params\n    this.forgotPasswordService.email$.subscribe(email => this.email = email || '');\n    this.forgotPasswordService.token$.subscribe(token => this.token = token || '');\n    // In a real app, you might want to validate the token here\n    if (!this.token) {\n      this.router.navigate(['/forgot-password']);\n    }\n  }\n  passwordMatchValidator(g) {\n    return g.get('password')?.value === g.get('confirmPassword')?.value ? null : {\n      'mismatch': true\n    };\n  }\n  togglePasswordVisibility(field) {\n    if (field === 'password') {\n      this.showPassword = !this.showPassword;\n    } else {\n      this.showConfirmPassword = !this.showConfirmPassword;\n    }\n  }\n  get password() {\n    return this.passwordForm.get('password');\n  }\n  get confirmPassword() {\n    return this.passwordForm.get('confirmPassword');\n  }\n  getPasswordErrors() {\n    if (!this.password?.errors) return '';\n    if (this.password.errors['required']) return 'Password is required';\n    if (this.password.errors['minlength']) return 'Password must be at least 8 characters';\n    if (this.password.errors['pattern']) {\n      return 'Password must include at least one uppercase letter, one lowercase letter, one number, and one special character';\n    }\n    return '';\n  }\n  onSubmit() {\n    if (this.passwordForm.invalid) {\n      this.passwordForm.markAllAsTouched();\n      return;\n    }\n    this.isLoading = true;\n    this.errorMessage = '';\n    // Simulate API call\n    setTimeout(() => {\n      try {\n        // In a real app, you would call your auth service here to reset the password\n        // For example:\n        // await this.authService.resetPassword(this.email, this.token, this.passwordForm.value.password);\n        this.router.navigate(['/forgot-password/success']);\n      } catch (error) {\n        this.errorMessage = 'Failed to reset password. Please try again.';\n        console.error('Reset password error:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    }, 1000);\n  }\n  navigateBack() {\n    this.router.navigate(['/forgot-password']);\n  }\n  static {\n    this.ɵfac = function ForgotPasswordCreateComponent_Factory(t) {\n      return new (t || ForgotPasswordCreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ForgotPasswordService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ForgotPasswordCreateComponent,\n      selectors: [[\"app-forgot-password-create\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 13,\n      vars: 2,\n      consts: [[1, \"login-container\"], [1, \"login-card\"], [1, \"back-button\", 3, \"click\"], [\"width\", \"24\", \"height\", \"24\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M15 18L9 12L15 6\", \"stroke\", \"#34437A\", \"stroke-width\", \"2\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\"], [\"src\", \"assets/logos/skillmuni-login-logo.png\", \"alt\", \"Skillmuni Logo\", 1, \"login-logo\"], [1, \"login-title\"], [1, \"login-subtitle\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"class\", \"loading-container\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [1, \"label-row\"], [\"class\", \"error-text\", 4, \"ngIf\"], [1, \"password-input-container\"], [\"formControlName\", \"password\", \"placeholder\", \"Enter new password\", 1, \"form-input\", 3, \"type\"], [\"type\", \"button\", 1, \"toggle-password\", 3, \"click\"], [\"width\", \"20\", \"height\", \"20\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M1 12C1 12 5 4 12 4C19 4 23 12 23 12C23 12 19 20 12 20C5 20 1 12 1 12Z\", \"stroke\", \"#34437A\", \"stroke-width\", \"2\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\"], [\"d\", \"M12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15Z\", \"stroke\", \"#34437A\", \"stroke-width\", \"2\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\"], [\"formControlName\", \"confirmPassword\", \"placeholder\", \"Confirm new password\", 1, \"form-input\", 3, \"type\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"login-btn\", 3, \"disabled\"], [1, \"submit-icon\"], [1, \"error-text\"], [1, \"error-message\"], [1, \"loading-container\"], [1, \"spinner\"]],\n      template: function ForgotPasswordCreateComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵlistener(\"click\", function ForgotPasswordCreateComponent_Template_div_click_2_listener() {\n            return ctx.navigateBack();\n          });\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(3, \"svg\", 3);\n          i0.ɵɵelement(4, \"path\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(5, \" Back \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelement(6, \"img\", 5);\n          i0.ɵɵelementStart(7, \"h2\", 6);\n          i0.ɵɵtext(8, \"Create New Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"p\", 7);\n          i0.ɵɵtext(10, \" Your new password must be different from previous used passwords. \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(11, ForgotPasswordCreateComponent_form_11_Template, 28, 11, \"form\", 8);\n          i0.ɵɵtemplate(12, ForgotPasswordCreateComponent_div_12_Template, 4, 0, \"div\", 9);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        }\n      },\n      dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r2","getPasswordErrors","ctx_r3","confirmPassword","hasError","ɵɵnamespaceHTML","ctx_r4","errorMessage","ɵɵlistener","ForgotPasswordCreateComponent_form_11_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","onSubmit","ɵɵtemplate","ForgotPasswordCreateComponent_form_11_span_5_Template","ɵɵelement","ForgotPasswordCreateComponent_form_11_Template_button_click_8_listener","ctx_r7","togglePasswordVisibility","ɵɵnamespaceSVG","ForgotPasswordCreateComponent_form_11_span_16_Template","ForgotPasswordCreateComponent_form_11_Template_button_click_19_listener","ctx_r8","ForgotPasswordCreateComponent_form_11_div_23_Template","ɵɵproperty","ctx_r0","passwordForm","password","touched","invalid","ɵɵclassProp","showPassword","showConfirmPassword","ForgotPasswordCreateComponent","constructor","fb","router","route","forgotPasswordService","isLoading","email","token","group","required","minLength","pattern","validator","passwordMatchValidator","ngOnInit","email$","subscribe","token$","navigate","g","get","value","field","errors","markAllAsTouched","setTimeout","error","console","navigateBack","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","ActivatedRoute","i3","ForgotPasswordService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ForgotPasswordCreateComponent_Template","rf","ctx","ForgotPasswordCreateComponent_Template_div_click_2_listener","ForgotPasswordCreateComponent_form_11_Template","ForgotPasswordCreateComponent_div_12_Template"],"sources":["/Users/apple/Desktop/skillmuni-job-portal/src/app/auth/forgot-password/forgot-password-create/forgot-password-create.component.ts","/Users/apple/Desktop/skillmuni-job-portal/src/app/auth/forgot-password/forgot-password-create/forgot-password-create.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ForgotPasswordService } from '../../services/forgot-password.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-forgot-password-create',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './forgot-password-create.component.html',\n  styleUrls: ['./forgot-password-create.component.css']\n})\nexport class ForgotPasswordCreateComponent implements OnInit {\n  passwordForm: FormGroup;\n  showPassword = false;\n  showConfirmPassword = false;\n  isLoading = false;\n  errorMessage = '';\n  email = '';\n  token = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private forgotPasswordService: ForgotPasswordService\n  ) {\n    this.passwordForm = this.fb.group({\n      password: ['', [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$')\n      ]],\n      confirmPassword: ['', Validators.required]\n    }, { validator: this.passwordMatchValidator });\n  }\n\n  ngOnInit() {\n    // Get email and token from the service or route params\n    this.forgotPasswordService.email$.subscribe(email => this.email = email || '');\n    this.forgotPasswordService.token$.subscribe(token => this.token = token || '');\n    \n    // In a real app, you might want to validate the token here\n    if (!this.token) {\n      this.router.navigate(['/forgot-password']);\n    }\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('password')?.value === g.get('confirmPassword')?.value\n      ? null : { 'mismatch': true };\n  }\n\n  togglePasswordVisibility(field: 'password' | 'confirmPassword') {\n    if (field === 'password') {\n      this.showPassword = !this.showPassword;\n    } else {\n      this.showConfirmPassword = !this.showConfirmPassword;\n    }\n  }\n\n  get password() { return this.passwordForm.get('password'); }\n  get confirmPassword() { return this.passwordForm.get('confirmPassword'); }\n\n  getPasswordErrors() {\n    if (!this.password?.errors) return '';\n    \n    if (this.password.errors['required']) return 'Password is required';\n    if (this.password.errors['minlength']) return 'Password must be at least 8 characters';\n    if (this.password.errors['pattern']) {\n      return 'Password must include at least one uppercase letter, one lowercase letter, one number, and one special character';\n    }\n    return '';\n  }\n\n  onSubmit() {\n    if (this.passwordForm.invalid) {\n      this.passwordForm.markAllAsTouched();\n      return;\n    }\n\n    this.isLoading = true;\n    this.errorMessage = '';\n\n    // Simulate API call\n    setTimeout(() => {\n      try {\n        // In a real app, you would call your auth service here to reset the password\n        // For example:\n        // await this.authService.resetPassword(this.email, this.token, this.passwordForm.value.password);\n        this.router.navigate(['/forgot-password/success']);\n      } catch (error) {\n        this.errorMessage = 'Failed to reset password. Please try again.';\n        console.error('Reset password error:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    }, 1000);\n  }\n\n  navigateBack() {\n    this.router.navigate(['/forgot-password']);\n  }\n}\n","<div class=\"login-container\">\n  <div class=\"login-card\">\n    <div class=\"back-button\" (click)=\"navigateBack()\">\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M15 18L9 12L15 6\" stroke=\"#34437A\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      </svg>\n      Back\n    </div>\n\n    <img src=\"assets/logos/skillmuni-login-logo.png\" alt=\"Skillmuni Logo\" class=\"login-logo\" />\n\n    <h2 class=\"login-title\">Create New Password</h2>\n    <p class=\"login-subtitle\">\n      Your new password must be different from previous used passwords.\n    </p>\n\n    <form [formGroup]=\"passwordForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"!isLoading\">\n      <div class=\"form-group\">\n        <div class=\"label-row\">\n          <label>New Password</label>\n          <span *ngIf=\"password?.touched && password?.invalid\" class=\"error-text\">\n            {{ getPasswordErrors() }}\n          </span>\n        </div>\n        <div class=\"password-input-container\">\n          <input \n            [type]=\"showPassword ? 'text' : 'password'\" \n            formControlName=\"password\" \n            class=\"form-input\" \n            placeholder=\"Enter new password\"\n            [class.error]=\"password?.touched && password?.invalid\">\n          <button type=\"button\" class=\"toggle-password\" (click)=\"togglePasswordVisibility('password')\">\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M1 12C1 12 5 4 12 4C19 4 23 12 23 12C23 12 19 20 12 20C5 20 1 12 1 12Z\" stroke=\"#34437A\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              <path d=\"M12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15Z\" stroke=\"#34437A\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <div class=\"label-row\">\n          <label>Confirm New Password</label>\n          <span *ngIf=\"confirmPassword?.touched && (confirmPassword?.invalid || passwordForm.hasError('mismatch'))\" class=\"error-text\">\n            {{ confirmPassword?.hasError('required') ? 'Please confirm your password' : 'Passwords do not match' }}\n          </span>\n        </div>\n        <div class=\"password-input-container\">\n          <input \n            [type]=\"showConfirmPassword ? 'text' : 'password'\" \n            formControlName=\"confirmPassword\" \n            class=\"form-input\" \n            placeholder=\"Confirm new password\"\n            [class.error]=\"confirmPassword?.touched && (confirmPassword?.invalid || passwordForm.hasError('mismatch'))\">\n          <button type=\"button\" class=\"toggle-password\" (click)=\"togglePasswordVisibility('confirmPassword')\">\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M1 12C1 12 5 4 12 4C19 4 23 12 23 12C23 12 19 20 12 20C5 20 1 12 1 12Z\" stroke=\"#34437A\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              <path d=\"M12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15Z\" stroke=\"#34437A\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      <div *ngIf=\"errorMessage\" class=\"error-message\">\n        {{ errorMessage }}\n      </div>\n\n      <button type=\"submit\" class=\"login-btn\" [disabled]=\"passwordForm.invalid\">\n        Reset Password <span class=\"submit-icon\">&#10132;</span>\n      </button>\n    </form>\n\n    <div *ngIf=\"isLoading\" class=\"loading-container\">\n      <div class=\"spinner\"></div>\n      <p>Updating password...</p>\n    </div>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}