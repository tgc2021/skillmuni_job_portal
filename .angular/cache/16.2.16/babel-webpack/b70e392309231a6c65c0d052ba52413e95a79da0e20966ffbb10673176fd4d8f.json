{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ForgotPasswordComponent = class ForgotPasswordComponent {\n  constructor(router, forgotPasswordService) {\n    this.router = router;\n    this.forgotPasswordService = forgotPasswordService;\n    this.email = '';\n    this.showError = false;\n    this.isLoading = false;\n    this.isSent = false;\n    this.countdown = 0;\n    this.timer = null;\n    this.errorMessage = '';\n  }\n  onSubmit() {\n    this.showError = true;\n    if (!this.email) {\n      this.errorMessage = 'Please enter your email address';\n      return;\n    }\n    if (!this.isValidEmail(this.email)) {\n      this.errorMessage = 'Please enter a valid email address';\n      return;\n    }\n    this.isLoading = true;\n    this.errorMessage = '';\n    // Simulate API call\n    setTimeout(() => {\n      try {\n        this.forgotPasswordService.setEmail(this.email);\n        this.forgotPasswordService.setToken('simulated-reset-token');\n        this.isSent = true;\n        this.startCountdown();\n      } catch (error) {\n        this.errorMessage = 'An error occurred. Please try again.';\n        console.error('Forgot password error:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    }, 1000);\n  }\n  resendLink() {\n    if (this.countdown === 0 && !this.isLoading) {\n      this.onSubmit();\n    }\n  }\n  startCountdown() {\n    this.countdown = 30;\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n    this.timer = setInterval(() => {\n      this.countdown--;\n      if (this.countdown <= 0) {\n        clearInterval(this.timer);\n        this.timer = null;\n      }\n    }, 1000);\n  }\n  navigateToLogin() {\n    this.router.navigate(['/login']);\n  }\n  isValidEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  }\n  ngOnDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  }\n};\nForgotPasswordComponent = __decorate([Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})], ForgotPasswordComponent);","map":{"version":3,"names":["Component","ForgotPasswordComponent","constructor","router","forgotPasswordService","email","showError","isLoading","isSent","countdown","timer","errorMessage","onSubmit","isValidEmail","setTimeout","setEmail","setToken","startCountdown","error","console","resendLink","clearInterval","setInterval","navigateToLogin","navigate","emailRegex","test","ngOnDestroy","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/apple/Desktop/skillmuni-job-portal/src/app/auth/forgot-password/forgot-password.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ForgotPasswordService } from '../services/forgot-password.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent {\n  email: string = '';\n  showError: boolean = false;\n  isLoading: boolean = false;\n  isSent: boolean = false;\n  countdown: number = 0;\n  timer: any = null;\n  errorMessage: string = '';\n\n  constructor(\n    private router: Router,\n    private forgotPasswordService: ForgotPasswordService\n  ) {}\n\n  onSubmit() {\n    this.showError = true;\n    if (!this.email) {\n      this.errorMessage = 'Please enter your email address';\n      return;\n    }\n    if (!this.isValidEmail(this.email)) {\n      this.errorMessage = 'Please enter a valid email address';\n      return;\n    }\n    this.isLoading = true;\n    this.errorMessage = '';\n    // Simulate API call\n    setTimeout(() => {\n      try {\n        this.forgotPasswordService.setEmail(this.email);\n        this.forgotPasswordService.setToken('simulated-reset-token');\n        this.isSent = true;\n        this.startCountdown();\n      } catch (error) {\n        this.errorMessage = 'An error occurred. Please try again.';\n        console.error('Forgot password error:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    }, 1000);\n  }\n\n  resendLink() {\n    if (this.countdown === 0 && !this.isLoading) {\n      this.onSubmit();\n    }\n  }\n\n  startCountdown() {\n    this.countdown = 30;\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n    this.timer = setInterval(() => {\n      this.countdown--;\n      if (this.countdown <= 0) {\n        clearInterval(this.timer);\n        this.timer = null;\n      }\n    }, 1000);\n  }\n\n  navigateToLogin() {\n    this.router.navigate(['/login']);\n  }\n\n  private isValidEmail(email: string): boolean {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  }\n\n  ngOnDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EASlCC,YACUC,MAAc,EACdC,qBAA4C;IAD5C,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,qBAAqB,GAArBA,qBAAqB;IAV/B,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,SAAS,GAAY,KAAK;IAC1B,KAAAC,SAAS,GAAY,KAAK;IAC1B,KAAAC,MAAM,GAAY,KAAK;IACvB,KAAAC,SAAS,GAAW,CAAC;IACrB,KAAAC,KAAK,GAAQ,IAAI;IACjB,KAAAC,YAAY,GAAW,EAAE;EAKtB;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACN,SAAS,GAAG,IAAI;IACrB,IAAI,CAAC,IAAI,CAACD,KAAK,EAAE;MACf,IAAI,CAACM,YAAY,GAAG,iCAAiC;MACrD;;IAEF,IAAI,CAAC,IAAI,CAACE,YAAY,CAAC,IAAI,CAACR,KAAK,CAAC,EAAE;MAClC,IAAI,CAACM,YAAY,GAAG,oCAAoC;MACxD;;IAEF,IAAI,CAACJ,SAAS,GAAG,IAAI;IACrB,IAAI,CAACI,YAAY,GAAG,EAAE;IACtB;IACAG,UAAU,CAAC,MAAK;MACd,IAAI;QACF,IAAI,CAACV,qBAAqB,CAACW,QAAQ,CAAC,IAAI,CAACV,KAAK,CAAC;QAC/C,IAAI,CAACD,qBAAqB,CAACY,QAAQ,CAAC,uBAAuB,CAAC;QAC5D,IAAI,CAACR,MAAM,GAAG,IAAI;QAClB,IAAI,CAACS,cAAc,EAAE;OACtB,CAAC,OAAOC,KAAK,EAAE;QACd,IAAI,CAACP,YAAY,GAAG,sCAAsC;QAC1DQ,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;OAC/C,SAAS;QACR,IAAI,CAACX,SAAS,GAAG,KAAK;;IAE1B,CAAC,EAAE,IAAI,CAAC;EACV;EAEAa,UAAUA,CAAA;IACR,IAAI,IAAI,CAACX,SAAS,KAAK,CAAC,IAAI,CAAC,IAAI,CAACF,SAAS,EAAE;MAC3C,IAAI,CAACK,QAAQ,EAAE;;EAEnB;EAEAK,cAAcA,CAAA;IACZ,IAAI,CAACR,SAAS,GAAG,EAAE;IACnB,IAAI,IAAI,CAACC,KAAK,EAAE;MACdW,aAAa,CAAC,IAAI,CAACX,KAAK,CAAC;;IAE3B,IAAI,CAACA,KAAK,GAAGY,WAAW,CAAC,MAAK;MAC5B,IAAI,CAACb,SAAS,EAAE;MAChB,IAAI,IAAI,CAACA,SAAS,IAAI,CAAC,EAAE;QACvBY,aAAa,CAAC,IAAI,CAACX,KAAK,CAAC;QACzB,IAAI,CAACA,KAAK,GAAG,IAAI;;IAErB,CAAC,EAAE,IAAI,CAAC;EACV;EAEAa,eAAeA,CAAA;IACb,IAAI,CAACpB,MAAM,CAACqB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEQX,YAAYA,CAACR,KAAa;IAChC,MAAMoB,UAAU,GAAG,4BAA4B;IAC/C,OAAOA,UAAU,CAACC,IAAI,CAACrB,KAAK,CAAC;EAC/B;EAEAsB,WAAWA,CAAA;IACT,IAAI,IAAI,CAACjB,KAAK,EAAE;MACdW,aAAa,CAAC,IAAI,CAACX,KAAK,CAAC;;EAE7B;CACD;AA5EYT,uBAAuB,GAAA2B,UAAA,EALnC5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACW9B,uBAAuB,CA4EnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}