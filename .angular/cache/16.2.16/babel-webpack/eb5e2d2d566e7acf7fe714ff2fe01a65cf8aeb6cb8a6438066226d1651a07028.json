{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ForgotPasswordComponent = class ForgotPasswordComponent {\n  constructor(router, forgotPasswordService) {\n    this.router = router;\n    this.forgotPasswordService = forgotPasswordService;\n    this.email = '';\n    this.showError = false;\n    this.isLoading = false;\n    this.isSent = false;\n    this.countdown = 0;\n    this.timer = null;\n    this.errorMessage = '';\n    this.sentState = 'idle'; // idle, sending, sent\n  }\n\n  onSubmit() {\n    this.showError = true;\n    if (!this.email) {\n      this.errorMessage = 'Please enter your email address';\n      return;\n    }\n    if (!this.isValidEmail(this.email)) {\n      this.errorMessage = 'Please enter a valid email address';\n      return;\n    }\n    this.sentState = 'sending';\n    this.errorMessage = '';\n    // Simulate API call\n    setTimeout(() => {\n      try {\n        this.forgotPasswordService.setEmail(this.email);\n        this.forgotPasswordService.setToken('simulated-reset-token');\n        this.sentState = 'sent';\n        this.startCountdown();\n      } catch (error) {\n        this.errorMessage = 'An error occurred. Please try again.';\n        this.sentState = 'idle';\n        console.error('Forgot password error:', error);\n      }\n    }, 1000);\n  }\n  resendLink() {\n    if (this.countdown === 0 && this.sentState !== 'sending') {\n      this.sentState = 'sending';\n      // Simulate API call again\n      setTimeout(() => {\n        try {\n          this.forgotPasswordService.setEmail(this.email);\n          this.forgotPasswordService.setToken('simulated-reset-token');\n          this.sentState = 'sent';\n          this.startCountdown();\n        } catch (error) {\n          this.errorMessage = 'An error occurred. Please try again.';\n          this.sentState = 'idle';\n          console.error('Forgot password error:', error);\n        }\n      }, 1000);\n    }\n  }\n  startCountdown() {\n    this.countdown = 30;\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n    this.timer = setInterval(() => {\n      this.countdown--;\n      if (this.countdown <= 0) {\n        clearInterval(this.timer);\n        this.timer = null;\n      }\n    }, 1000);\n  }\n  navigateToLogin() {\n    this.router.navigate(['/login']);\n  }\n  isValidEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  }\n  ngOnDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  }\n};\nForgotPasswordComponent = __decorate([Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})], ForgotPasswordComponent);","map":{"version":3,"names":["Component","ForgotPasswordComponent","constructor","router","forgotPasswordService","email","showError","isLoading","isSent","countdown","timer","errorMessage","sentState","onSubmit","isValidEmail","setTimeout","setEmail","setToken","startCountdown","error","console","resendLink","clearInterval","setInterval","navigateToLogin","navigate","emailRegex","test","ngOnDestroy","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/apple/Desktop/skillmuni-job-portal/src/app/auth/forgot-password/forgot-password.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ForgotPasswordService } from '../services/forgot-password.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent {\n  email: string = '';\n  showError: boolean = false;\n  isLoading: boolean = false;\n  isSent: boolean = false;\n  countdown: number = 0;\n  timer: any = null;\n  errorMessage: string = '';\n  sentState: 'idle' | 'sending' | 'sent' = 'idle'; // idle, sending, sent\n\n  constructor(\n    private router: Router,\n    private forgotPasswordService: ForgotPasswordService\n  ) {}\n\n  onSubmit() {\n    this.showError = true;\n    if (!this.email) {\n      this.errorMessage = 'Please enter your email address';\n      return;\n    }\n    if (!this.isValidEmail(this.email)) {\n      this.errorMessage = 'Please enter a valid email address';\n      return;\n    }\n    this.sentState = 'sending';\n    this.errorMessage = '';\n    // Simulate API call\n    setTimeout(() => {\n      try {\n        this.forgotPasswordService.setEmail(this.email);\n        this.forgotPasswordService.setToken('simulated-reset-token');\n        this.sentState = 'sent';\n        this.startCountdown();\n      } catch (error) {\n        this.errorMessage = 'An error occurred. Please try again.';\n        this.sentState = 'idle';\n        console.error('Forgot password error:', error);\n      }\n    }, 1000);\n  }\n\n  resendLink() {\n    if (this.countdown === 0 && this.sentState !== 'sending') {\n      this.sentState = 'sending';\n      // Simulate API call again\n      setTimeout(() => {\n        try {\n          this.forgotPasswordService.setEmail(this.email);\n          this.forgotPasswordService.setToken('simulated-reset-token');\n          this.sentState = 'sent';\n          this.startCountdown();\n        } catch (error) {\n          this.errorMessage = 'An error occurred. Please try again.';\n          this.sentState = 'idle';\n          console.error('Forgot password error:', error);\n        }\n      }, 1000);\n    }\n  }\n\n  startCountdown() {\n    this.countdown = 30;\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n    this.timer = setInterval(() => {\n      this.countdown--;\n      if (this.countdown <= 0) {\n        clearInterval(this.timer);\n        this.timer = null;\n      }\n    }, 1000);\n  }\n\n  navigateToLogin() {\n    this.router.navigate(['/login']);\n  }\n\n  private isValidEmail(email: string): boolean {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  }\n\n  ngOnDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}